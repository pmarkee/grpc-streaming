// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: currency.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CurrencyPair struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	From          string                 `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To            string                 `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CurrencyPair) Reset() {
	*x = CurrencyPair{}
	mi := &file_currency_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CurrencyPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrencyPair) ProtoMessage() {}

func (x *CurrencyPair) ProtoReflect() protoreflect.Message {
	mi := &file_currency_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrencyPair.ProtoReflect.Descriptor instead.
func (*CurrencyPair) Descriptor() ([]byte, []int) {
	return file_currency_proto_rawDescGZIP(), []int{0}
}

func (x *CurrencyPair) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *CurrencyPair) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

type CurrencyExchangeRate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rate          float32                `protobuf:"fixed32,1,opt,name=rate,proto3" json:"rate,omitempty"`
	From          string                 `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To            string                 `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CurrencyExchangeRate) Reset() {
	*x = CurrencyExchangeRate{}
	mi := &file_currency_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CurrencyExchangeRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrencyExchangeRate) ProtoMessage() {}

func (x *CurrencyExchangeRate) ProtoReflect() protoreflect.Message {
	mi := &file_currency_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrencyExchangeRate.ProtoReflect.Descriptor instead.
func (*CurrencyExchangeRate) Descriptor() ([]byte, []int) {
	return file_currency_proto_rawDescGZIP(), []int{1}
}

func (x *CurrencyExchangeRate) GetRate() float32 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *CurrencyExchangeRate) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *CurrencyExchangeRate) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *CurrencyExchangeRate) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

var File_currency_proto protoreflect.FileDescriptor

const file_currency_proto_rawDesc = "" +
	"\n" +
	"\x0ecurrency.proto\x12\bcurrency\x1a\x1fgoogle/protobuf/timestamp.proto\"2\n" +
	"\fCurrencyPair\x12\x12\n" +
	"\x04from\x18\x01 \x01(\tR\x04from\x12\x0e\n" +
	"\x02to\x18\x02 \x01(\tR\x02to\"\x88\x01\n" +
	"\x14CurrencyExchangeRate\x12\x12\n" +
	"\x04rate\x18\x01 \x01(\x02R\x04rate\x12\x12\n" +
	"\x04from\x18\x02 \x01(\tR\x04from\x12\x0e\n" +
	"\x02to\x18\x03 \x01(\tR\x02to\x128\n" +
	"\ttimestamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp2Q\n" +
	"\bCurrency\x12E\n" +
	"\tSubscribe\x12\x16.currency.CurrencyPair\x1a\x1e.currency.CurrencyExchangeRate0\x01B\x06Z\x04./pbb\x06proto3"

var (
	file_currency_proto_rawDescOnce sync.Once
	file_currency_proto_rawDescData []byte
)

func file_currency_proto_rawDescGZIP() []byte {
	file_currency_proto_rawDescOnce.Do(func() {
		file_currency_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_currency_proto_rawDesc), len(file_currency_proto_rawDesc)))
	})
	return file_currency_proto_rawDescData
}

var file_currency_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_currency_proto_goTypes = []any{
	(*CurrencyPair)(nil),          // 0: currency.CurrencyPair
	(*CurrencyExchangeRate)(nil),  // 1: currency.CurrencyExchangeRate
	(*timestamppb.Timestamp)(nil), // 2: google.protobuf.Timestamp
}
var file_currency_proto_depIdxs = []int32{
	2, // 0: currency.CurrencyExchangeRate.timestamp:type_name -> google.protobuf.Timestamp
	0, // 1: currency.Currency.Subscribe:input_type -> currency.CurrencyPair
	1, // 2: currency.Currency.Subscribe:output_type -> currency.CurrencyExchangeRate
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_currency_proto_init() }
func file_currency_proto_init() {
	if File_currency_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_currency_proto_rawDesc), len(file_currency_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_currency_proto_goTypes,
		DependencyIndexes: file_currency_proto_depIdxs,
		MessageInfos:      file_currency_proto_msgTypes,
	}.Build()
	File_currency_proto = out.File
	file_currency_proto_goTypes = nil
	file_currency_proto_depIdxs = nil
}
